FORMAT: 1A
HOST: http://private-136e7-giasu.apiary-mock.com

# Giasu API Blueprint

This is API Blueprint for Giasu app.

+ *Mock server*: http://private-136e7-giasu.apiary-mock.com

# API Authentication

To make requests to api, you will need to set an authorization header:

* Basic authentication for public resources:

    <code> Basic-Authorization: Basic {base 64 encoded string of "##tutoronline2016##" string} </code>
    
* JSON Web Token authentication for protected resources:
    
    <code> Authorization: Bearer {yourtokenhere} </code>

# HTTP Status Codes

When a HTTP request return error, the HTTP status codes should be in follow list:

* **401**: User unauthorized or token expired.
* **404**: Resource is not found.
* **500**: Internal server error. 

# HTTP JSON Response

* Response format

        {
            "error_status": "0 | 1",
            "error_content": "string | json | array of json",
            "result": "string | json | array of json",
            "duration": "timestamp"
        }
    
* with errors:

        {
            "error_status": "1",
            "error_content": {
                "username": [
                    "The username field is required."
                ],
                "password": [
                    "The password field is required."
                ]
            },
            "result": "",
            "duration": "1234"
        }
    
* without errors:

        {
            "error_status": "0",
            "error_content": "",
            "result": {
                "id": 1,
                "username": "pcl"
            },
            "duration": "1234"
        }

## Group Authentication

## Login [/login]

### login [POST]

+ Request (application/json)

        {
            "username": "string|required",
            "password": "string|required"
        }

+ Response 200 (application/json)

        {
            "error_status": 0,
            "error_content": "",
            "result": {
                "id": "2",
                "username": "hocsinh1",
                "email": "hocsinh1@tutoronline.vn",
                "phone": "0123333331",
                "first_name": "Học",
                "last_name": "Sinh 1",
                "type_id": "3",
                "registration_code": null,
                "created_at": "2015-12-12 19:21:46",
                "updated_at": "2015-12-12 19:21:46",
                "type_name": "Học sinh",
                "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIyIiwiaXNzIjoiaHR0cDpcL1wvNTIuMzMuMjUzLjE1MzoxNDIxXC9hcGlcL2xvZ2luIiwiaWF0IjoiMTQ0OTk0OTA4OCIsImV4cCI6IjE0NDk5NTI2ODgiLCJuYmYiOiIxNDQ5OTQ5MDg4IiwianRpIjoiYWFiYzg2NjU0Yjc0OGYyNjI4ODVkOGY1MjYwYTZiYjMifQ.KDBNvl9pzi3uwyj84VMARoHc-ejC6RqWdsmXQjPEViE"
            },
            "duration": ""
        }
        
## Resgister [/register]

### Register [POST]

+ Request (application/json)

        {
            "username": "string|required",
            "email": "string|required",
            "phone": "string|required",
            "password": "string|required",
            "first_name": "string|required",
            "last_name": "string|optional",
            "type_id": "integer|optional|in:2(giasu),3(hocsinh)",
            "avatar": "User's avatar",
            "grade_ids[]": "integer|required",
            "grade_ids[]": "integer|required"
        }

+ Response 200 (application/json)

        {
            "error_status": 0,
            "error_content": "",
            "result": {
                "username": "hocsinh100",
                "email": "hocsinh100@tutoronline.vn",
                "phone": "093376355",
                "first_name": "Hoc",
                "last_name": "Sinh 100",
                "type_id": "3",
                "updated_at": "2015-12-12 19:42:40",
                "created_at": "2015-12-12 19:42:40",
                "id": 33,
                "type_name": "Học sinh"
            },
            "duration": ""
        }
        
## Group Master data

Resources realted to users in the API.

## Master data [/master-data?cat_id={cat_id}]

+ Parameters
    + cat_id: 1 (number) - 1(grade), 2(subject)

### Get master data by category [GET]

+ Response 200 (application/json)

        {
            "error_status": 0,
            "error_content": "",
            "result": {
                {
                  "id": "1",
                  "name": "Lớp 1",
                  "description": null
                },
                {
                  "id": "2",
                  "name": "Lớp 2",
                  "description": null
                },
                {
                  "id": "3",
                  "name": "Lớp 3",
                  "description": null
                },
                {
                  "id": "4",
                  "name": "Lớp 4",
                  "description": null
                },
                {
                  "id": "5",
                  "name": "Lớp 5",
                  "description": null
                }
            },
            "duration": ""
        }

## Group User

Resources realted to users in the API.

## User [/users/{user_id}]

+ Parameters
    + user_id: 1 (required, number) - ID of user

### Get detail of user [GET]

+ Response 200 (application/json)

        {
            "error_status": 0,
            "error_content": "",
            "result": {
                "id": "33",
                "username": "hocsinh100",
                "email": "hocsinh100@tutoronline.vn",
                "phone": "093376355",
                "first_name": "Hoc",
                "last_name": "Sinh 100",
                "type_id": "3",
                "registration_code": null,
                "created_at": "2015-12-12 19:42:40",
                "updated_at": "2015-12-12 19:42:40",
                "type_name": "Học sinh",
                "avatar_thumb": "/avatars/thumb/missing.png",
                "avatar_medium": "/avatars/medium/missing.png",
                "grades": [
                    {
                        "id": "1",
                        "name": "Lớp 1",
                        "description": null
                    }
                ]
            },
            "duration": ""
        }
        
### Update a user [POST]

+ Request (application/json)

        {
            "username": "string|required",
            "email": "string|required",
            "phone": "string|required",
            "password": "string|required",
            "first_name": "string|required",
            "last_name": "string|optional",
            "type_id": "integer|optional|in:2(giasu),3(hocsinh)",
            "avatar": "User's avatar",
            "grade_ids[]": "integer|required",
            "grade_ids[]": "integer|required"
        }

+ Response 200 (application/json)

        {
            "error_status": 0,
            "error_content": "",
            "result": {
                "username": "hocsinh100",
                "email": "hocsinh100@tutoronline.vn",
                "phone": "093376355",
                "first_name": "Hoc",
                "last_name": "Sinh 100",
                "type_id": "3",
                "updated_at": "2015-12-12 19:42:40",
                "created_at": "2015-12-12 19:42:40",
                "id": 33,
                "type_name": "Học sinh"
            },
            "duration": ""
        }
        
### Delete an user [DELETE]

+ Response 200 (application/json)

        {
            "error_status": "0",
            "error_content": "",
            "result": "",
            "duration": "1234"
        }
## Group Question

Resources realted to questions in the API.

## Default [/questions]

### Get list of question [GET]

+ Response 200 (application/json)

        {
            "error_status": "0",
            "error_content": "",
            "result": [
                {
                    "id": 1,
                    "title": "pcl",
                    "body": "",
                    "media": "",
                },
                {
                    "id": 2,
                    "title": "phungnc",
                    "body": "",
                    "media": "",
                }
            ],
            "duration": "1234"
        }

### Create new question [POST]

+ Request (application/json)

        {
          "title": "con cò bé bé",
          "body": "基本的には1 ticketに対して1 topic branch 1つの目的に対して1 commit と覚えておいて下さい。",
          "media": "",
          "userAvatar": "https://tky-chat-work-appdata.s3.amazonaws.com/avatar/363/363866.rsz.png",
          "userId": "55a49222c66f5d882d640ec6"
        }

+ Response 200 (application/json)

        {
            "error_status": "0",
            "error_content": "",
            "result": {
                  "title": "con cò bé bé",
                  "body": "基本的には1 ticketに対して1 topic branch 1つの目的に対して1 commit と覚えておいて下さい。",
                  "media": "",
                  "userAvatar": "https://tky-chat-work-appdata.s3.amazonaws.com/avatar/363/363866.rsz.png",
                  "id": "55adc767021ebe155f8ca170",
                  "userId": "55a49222c66f5d882d640ec6"
            },
            "duration": "1234"
        }

## Question [/questions/{question_id}]

+ Parameters
    + question_id: 1 (required, number) - ID of question

### Get detail of question [GET]

+ Response 200 (application/json)

        {
            "error_status": "0",
            "error_content": "",
            "result": {
                "id": 1,
                "title": "pcl",
                "body": "lorem ipsum lorem ipsum lorem ipsum lorem ipsum",
                "media": "http://media.doisongphapluat.com/297/2014/8/25/hot-girl-ban-bao-5.PNG"
            },
            "duration": "1234"
        }
        
### Edit a Question [PUT]

+ Request (application/json)

        {
          "title": "con cò bé bé",
          "body": "基本的には1 ticketに対して1 topic branch 1つの目的に対して1 commit と覚えておいて下さい。",
          "media": "",
          "userAvatar": "https://tky-chat-work-appdata.s3.amazonaws.com/avatar/363/363866.rsz.png",
          "userId": "55a49222c66f5d882d640ec6"
        }

+ Response 200 (application/json)

        {
            "error_status": "0",
            "error_content": "",
            "result": {
                  "title": "con cò bé bé",
                  "body": "基本的には1 ticketに対して1 topic branch 1つの目的に対して1 commit と覚えておいて下さい。",
                  "media": "",
                  "userAvatar": "https://tky-chat-work-appdata.s3.amazonaws.com/avatar/363/363866.rsz.png",
                  "id": "55adc767021ebe155f8ca170",
                  "userId": "55a49222c66f5d882d640ec6"
            },
            "duration": "1234"
        }
        
### Delete a question [DELETE]

+ Response 200 (HTTP Status Code)

        {
            "error_status": "0",
            "error_content": "",
            "result": "",
            "duration": "1234"
        }
## Question - Answer Default [/questions/{question_id}/answers]

### Delete all Answer of Question [DELETE]
    
+ Request (application/json)
    
+ Response 200 (application/json)
    
### Get answers of questions [GET]

+ Request (application/json)
 
+ Response 200 (application/json)

### Create new answer of this question [POST]

+ Request (application/json)

+ Response 200

## Question - Answer [/questions/{question_id}/answers/{answer_id}]

### Get [GET]

+ Request (application/json)

+ Response 200

### Delete a related question by id for answers [DELETE]

+ Request URL 

    ```
    http://localhost:3000/api/questions/{question_id}/answers/answer_id
    ```
    
+ Response 200 (application/json)

        {
            "error_status": "0",
            "error_content": "",
            "result": "",
            "duration": "1234"
        }
        